name: Continuous Integration

#on:
#  push:
#    tags:
#      - 'v*'

on: [push]

jobs:
  finish-ci:
    runs-on: ubuntu-latest
    needs: [build-linux, build-docs]
    steps:
    - uses: actions/download-artifact@v2
    - name: Display structure of downloaded files
      run: ls -R


  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create Build Environment
      run: |
        cmake --version
        cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure with CMake
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake ${GITHUB_WORKSPACE}/Projects -DCMAKE_BUILD_TYPE=Release -DFLUIDPROP=0 -DCOOLPROP=1 || true
        cmake ${GITHUB_WORKSPACE}/Projects -DCMAKE_BUILD_TYPE=Release -DFLUIDPROP=0 -DCOOLPROP=1
    - name: Build with CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --target ExternalMediaLib
    - name: Install with CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --target install
    - name: upload linux artifacts
      uses: actions/upload-artifact@v1
      with:
        name: binaries
        path: Modelica
    - name: Test CI
      working-directory: ${{runner.workspace}}/Projects
      run: omc CoolPropTest.mos

   
  build-docs:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Build Doxygen sources
      uses: mattnotmitt/doxygen-action@v1
      with:
        working-directory: 'Projects/'
        doxyfile-path: './Doxyfile'
        enable-latex: true

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v1
      with:
        name: docs
        path: Projects/Documentation

    - name: Copy PDF to Modelica tree
      run: cp 'Projects/Documentation/latex/refman.pdf' 'Modelica/ExternalMedia 3.3.0/Resources/manual.pdf'

    - name: Upload Modelica sources with PDF
      uses: actions/upload-artifact@v1
      with:
        name: binaries
        path: Modelica

    - name: Deploy generated HTML
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: Projects/Documentation/html
        #destination_dir: latest
